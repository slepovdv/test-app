version: "2.4"

services:
  jobapp:
    container_name: jobapp
    build: ./JobsApp/.
    expose:
      - "80"
    restart: on-failure  
    depends_on:
      database:
        condition: service_healthy
  
  database:
    container_name: jobappdb
    image: postgres:9.6.15-alpine
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
  
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.11.2
    restart: on-failure
    expose:
      - 9090
    volumes:
      - "pmdata:/prometheus"
      - "./config/prometheus:/etc/prometheus/"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=7d"

  grafana:
    image: grafana/grafana:6.3.2
    container_name: grafana
    restart: on-failure
    volumes:
      - "grdata:/var/lib/grafana"
      - "./config/grafana/provisioning:/etc/grafana/provisioning"
    expose:
      - 3000
    depends_on:
      - prometheus
    env_file:
      - "./env.grafana"
      
  nodeexporter:
    container_name: nodeexporter
    image: prom/node-exporter:v0.18.1
    restart: on-failure
    expose:
      - 9100
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro,rslave"
    command:
      - "--path.rootfs=/rootfs" 
      - "--path.procfs=/host/proc" 
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    
  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor
    command: -storage_driver=influxdb -storage_driver_db=cadvisor
    expose:
      - 8080
    volumes:
    - "/:/rootfs:ro"
    - "/var/run:/var/run:rw"
    - "/sys:/sys:ro"
    - "/var/lib/docker/:/var/lib/docker:ro"
    depends_on:
      - prometheus

  postgresexporter:
    container_name: postgresexporter
    image: wrouesnel/postgres_exporter:v0.5.1
    restart: on-failure
    expose:
      - 9187
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATA_SOURCE_NAME: postgresql://postgres:1@jobappdb:5432/postgres?sslmode=disable

  nginx:
    container_name: nginx
    image: nginx
    build: ./images/nginx/
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      - grafana
      - jobapp



volumes:
  pgdata:
    external: true
  pmdata:
    external: true
  grdata:
    external: true