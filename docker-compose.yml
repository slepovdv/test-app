version: "2.4"

services:
  jobapp:
    container_name: app
    build: ./JobsApp/.
    ports:
      - "5000:80"
    restart: on-failure  
    depends_on:
      database:
        condition: service_healthy
  
  database:
    container_name: jobappdb
    image: postgres:9.6.15-alpine
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
  
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.11.2
    restart: on-failure
    volumes:
      - "pmdata:/prometheus"
      - "./config/prometheus:/etc/prometheus/"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'

  grafana:
    image: grafana/grafana:6.3.2
    container_name: grafana
    restart: on-failure
    volumes:
      - "grdata:/var/lib/grafana"
      - "./config/grafana/provisioning:/etc/grafana/provisioning/"
    ports:
      - "3000:3000"   
    depends_on:
      - prometheus
    env_file:
      - 'env.grafana' 

volumes:
  pgdata:
    external: true
  pmdata:
    external: true
  grdata:
    external: true